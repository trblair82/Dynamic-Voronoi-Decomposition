/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package CGAL.Kernel;
import java.util.Iterator;
public class CGAL_Kernel {
  public static double squared_distance(Point_3 arg0, Point_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_0(Point_3.getCPtr(arg0), arg0, Point_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Point_3 arg0, Plane_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_1(Point_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Point_3 arg0, Segment_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_2(Point_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Point_3 arg0, Line_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_3(Point_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Point_3 arg0, Ray_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_4(Point_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Plane_3 arg0, Point_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_5(Plane_3.getCPtr(arg0), arg0, Point_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Plane_3 arg0, Segment_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_6(Plane_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Plane_3 arg0, Line_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_7(Plane_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Plane_3 arg0, Ray_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_8(Plane_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Segment_3 arg0, Point_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_9(Segment_3.getCPtr(arg0), arg0, Point_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Segment_3 arg0, Plane_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_10(Segment_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Segment_3 arg0, Segment_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_11(Segment_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Segment_3 arg0, Line_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_12(Segment_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Segment_3 arg0, Ray_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_13(Segment_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Line_3 arg0, Point_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_14(Line_3.getCPtr(arg0), arg0, Point_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Line_3 arg0, Plane_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_15(Line_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Line_3 arg0, Segment_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_16(Line_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Line_3 arg0, Line_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_17(Line_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Line_3 arg0, Ray_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_18(Line_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Ray_3 arg0, Point_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_19(Ray_3.getCPtr(arg0), arg0, Point_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Ray_3 arg0, Plane_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_20(Ray_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Ray_3 arg0, Segment_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_21(Ray_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Ray_3 arg0, Line_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_22(Ray_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Ray_3 arg0, Ray_3 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_23(Ray_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Point_2 arg0, Point_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_24(Point_2.getCPtr(arg0), arg0, Point_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Point_2 arg0, Segment_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_25(Point_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Point_2 arg0, Triangle_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_26(Point_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Point_2 arg0, Line_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_27(Point_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Point_2 arg0, Ray_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_28(Point_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Segment_2 arg0, Segment_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_29(Segment_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Segment_2 arg0, Point_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_30(Segment_2.getCPtr(arg0), arg0, Point_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Segment_2 arg0, Triangle_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_31(Segment_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Segment_2 arg0, Line_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_32(Segment_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Segment_2 arg0, Ray_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_33(Segment_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Triangle_2 arg0, Triangle_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_34(Triangle_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Triangle_2 arg0, Point_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_35(Triangle_2.getCPtr(arg0), arg0, Point_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Triangle_2 arg0, Segment_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_36(Triangle_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Triangle_2 arg0, Line_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_37(Triangle_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Triangle_2 arg0, Ray_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_38(Triangle_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Line_2 arg0, Triangle_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_39(Line_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Line_2 arg0, Point_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_40(Line_2.getCPtr(arg0), arg0, Point_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Line_2 arg0, Segment_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_41(Line_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Line_2 arg0, Line_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_42(Line_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Line_2 arg0, Ray_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_43(Line_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Ray_2 arg0, Triangle_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_44(Ray_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Ray_2 arg0, Point_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_45(Ray_2.getCPtr(arg0), arg0, Point_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Ray_2 arg0, Segment_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_46(Ray_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Ray_2 arg0, Line_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_47(Ray_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1);
  }

  public static double squared_distance(Ray_2 arg0, Ray_2 arg1) {
    return CGAL_KernelJNI.squared_distance__SWIG_48(Ray_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Plane_3 arg0, Segment_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_0(Plane_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Plane_3 arg0, Line_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_1(Plane_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Plane_3 arg0, Plane_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_2(Plane_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Plane_3 arg0, Triangle_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_3(Plane_3.getCPtr(arg0), arg0, Triangle_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Plane_3 arg0, Ray_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_4(Plane_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Segment_3 arg0, Plane_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_5(Segment_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Segment_3 arg0, Segment_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_6(Segment_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Segment_3 arg0, Line_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_7(Segment_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Segment_3 arg0, Triangle_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_8(Segment_3.getCPtr(arg0), arg0, Triangle_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Segment_3 arg0, Ray_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_9(Segment_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Line_3 arg0, Plane_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_10(Line_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Line_3 arg0, Segment_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_11(Line_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Line_3 arg0, Line_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_12(Line_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Line_3 arg0, Triangle_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_13(Line_3.getCPtr(arg0), arg0, Triangle_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Line_3 arg0, Ray_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_14(Line_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Triangle_3 arg0, Plane_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_15(Triangle_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Triangle_3 arg0, Segment_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_16(Triangle_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Triangle_3 arg0, Line_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_17(Triangle_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Triangle_3 arg0, Triangle_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_18(Triangle_3.getCPtr(arg0), arg0, Triangle_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Triangle_3 arg0, Ray_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_19(Triangle_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Ray_3 arg0, Plane_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_20(Ray_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Ray_3 arg0, Segment_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_21(Ray_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Ray_3 arg0, Line_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_22(Ray_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Ray_3 arg0, Triangle_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_23(Ray_3.getCPtr(arg0), arg0, Triangle_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Ray_3 arg0, Ray_3 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_24(Ray_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Segment_2 arg0, Segment_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_25(Segment_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Segment_2 arg0, Triangle_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_26(Segment_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Segment_2 arg0, Ray_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_27(Segment_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Segment_2 arg0, Line_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_28(Segment_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Triangle_2 arg0, Triangle_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_29(Triangle_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Triangle_2 arg0, Segment_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_30(Triangle_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Triangle_2 arg0, Ray_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_31(Triangle_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Triangle_2 arg0, Line_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_32(Triangle_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Line_2 arg0, Triangle_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_33(Line_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Line_2 arg0, Segment_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_34(Line_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Line_2 arg0, Ray_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_35(Line_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Line_2 arg0, Line_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_36(Line_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Ray_2 arg0, Triangle_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_37(Ray_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Ray_2 arg0, Segment_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_38(Ray_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Ray_2 arg0, Ray_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_39(Ray_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1);
  }

  public static boolean do_intersect(Ray_2 arg0, Line_2 arg1) {
    return CGAL_KernelJNI.do_intersect__SWIG_40(Ray_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1);
  }

  public static Object intersection(Plane_3 arg0, Segment_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_0(Plane_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Plane_3 arg0, Line_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_1(Plane_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Plane_3 arg0, Plane_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_2(Plane_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Plane_3 arg0, Triangle_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_3(Plane_3.getCPtr(arg0), arg0, Triangle_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Plane_3 arg0, Ray_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_4(Plane_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Segment_3 arg0, Plane_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_5(Segment_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Segment_3 arg0, Segment_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_6(Segment_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Segment_3 arg0, Triangle_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_7(Segment_3.getCPtr(arg0), arg0, Triangle_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Segment_3 arg0, Line_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_8(Segment_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Segment_3 arg0, Ray_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_9(Segment_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Line_3 arg0, Plane_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_10(Line_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Line_3 arg0, Segment_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_11(Line_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Line_3 arg0, Triangle_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_12(Line_3.getCPtr(arg0), arg0, Triangle_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Line_3 arg0, Line_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_13(Line_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Line_3 arg0, Ray_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_14(Line_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Triangle_3 arg0, Plane_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_15(Triangle_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Triangle_3 arg0, Segment_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_16(Triangle_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Triangle_3 arg0, Line_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_17(Triangle_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Triangle_3 arg0, Triangle_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_18(Triangle_3.getCPtr(arg0), arg0, Triangle_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Triangle_3 arg0, Ray_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_19(Triangle_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Ray_3 arg0, Plane_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_20(Ray_3.getCPtr(arg0), arg0, Plane_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Ray_3 arg0, Segment_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_21(Ray_3.getCPtr(arg0), arg0, Segment_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Ray_3 arg0, Line_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_22(Ray_3.getCPtr(arg0), arg0, Line_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Ray_3 arg0, Triangle_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_23(Ray_3.getCPtr(arg0), arg0, Triangle_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Ray_3 arg0, Ray_3 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_24(Ray_3.getCPtr(arg0), arg0, Ray_3.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Segment_2 arg0, Segment_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_25(Segment_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Segment_2 arg0, Triangle_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_26(Segment_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Segment_2 arg0, Ray_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_27(Segment_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Segment_2 arg0, Line_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_28(Segment_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Triangle_2 arg0, Triangle_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_29(Triangle_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Triangle_2 arg0, Segment_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_30(Triangle_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Triangle_2 arg0, Ray_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_31(Triangle_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Triangle_2 arg0, Line_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_32(Triangle_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Line_2 arg0, Triangle_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_33(Line_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Line_2 arg0, Segment_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_34(Line_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Line_2 arg0, Ray_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_35(Line_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Line_2 arg0, Line_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_36(Line_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Ray_2 arg0, Triangle_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_37(Ray_2.getCPtr(arg0), arg0, Triangle_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Ray_2 arg0, Segment_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_38(Ray_2.getCPtr(arg0), arg0, Segment_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Ray_2 arg0, Ray_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_39(Ray_2.getCPtr(arg0), arg0, Ray_2.getCPtr(arg1), arg1), true);
  }

  public static Object intersection(Ray_2 arg0, Line_2 arg1) {
    return new Object(CGAL_KernelJNI.intersection__SWIG_40(Ray_2.getCPtr(arg0), arg0, Line_2.getCPtr(arg1), arg1), true);
  }

  public static double area(Point_2 arg0, Point_2 arg1, Point_2 arg2) {
    return CGAL_KernelJNI.area(Point_2.getCPtr(arg0), arg0, Point_2.getCPtr(arg1), arg1, Point_2.getCPtr(arg2), arg2);
  }

  public static Bounded_side bounded_side_2(Iterator<Point_2> range, Point_2 p) {
    return Bounded_side.swigToEnum(CGAL_KernelJNI.bounded_side_2(range, Point_2.getCPtr(p), p));
  }

}
